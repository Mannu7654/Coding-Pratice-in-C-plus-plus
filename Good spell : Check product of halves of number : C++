// A spel is string consisting of an even number of digits. A spell is considered good 
// if the product of the digits in the first half of the string is equal to the product of the digits in the second half of the string.

// You given a string S of length wharsis an even integer you need to check whether it a good spent.
// Return '1' if the given string is good spell, otherwise return '0'.


#include<bits/stdc++.h>
using namespace std;

int goodSpell(int num, string &s)
{
    if(s.length() % 2 != 0)
    {
        return 0;
    }

    int p1=1;
    for(int i=0;i<s.length()/2;i++)
    {
        p1 *= (s[i] - '0');
    }

    int p2=1;
    for(int i=s.length()/2;i<s.length();i++)
    {
        p2 *= (s[i] - '0');
    }
    
    if (p1 == p2) {
      cout<< "\nIt is a good spell"<<endl;      //  return 1
    } else {
      cout<<"\nIt is a not good spell"<<endl;      //  return 0
    }
    
    return -1;
}

int main()
{
	int number;
	cout<<"Enter the digit of the number: --> ";
    cin >> number;

    string str = to_string(number);

    goodSpell(number, str);

    
    return 0;
}
